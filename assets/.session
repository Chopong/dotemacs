;;; -*- coding: utf-8; -*-
;;; Automatically generated on Wed Jul 31 23:39:04 2019
;;; Invoked by chopong@chopong-Manjaro using 26.2
(setq-default kill-ring '(#("/home/chopong/.emacs.d/.cache/
" 0 30 (face font-lock-variable-name-face fontified t) 30 31 (fontified t)) "" "" #("" 0 1 (fontified t face font-lock-comment-face)) #("# POWERLEVEL9k_CONTEXT_TEMPLATE=\"echo  \"
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 31 (fontified t face font-lock-comment-face) 31 32 (fontified t face font-lock-comment-face) 32 41 (fontified t face font-lock-comment-face) 41 42 (fontified t face font-lock-comment-face)) #("home/chopong/Documents/Email" 0 5 (fontified t face font-lock-string-face) 5 13 (face font-lock-string-face fontified t) 13 23 (fontified t face font-lock-string-face) 23 28 (fontified t face font-lock-string-face)) "require 'mu4e)" #("require 'mu4e)" 0 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 9 (face highlight-quoted-quote fontified t) 9 13 (face font-lock-constant-face fontified t) 13 14 (face parinfer-pretty-parens:dim-paren-face fontified t)) #("Volumes/SHARE/DotEmacs" 0 8 (fontified t face font-lock-string-face) 8 14 (face font-lock-string-face fontified t) 14 22 (face font-lock-string-face fontified t))))
(setq-default session-file-alist '(("~/.nutstore/db/customExtRules.conf" 643 605 1 nil nil 643 (overwrite-mode))))
(setq-default search-ring '("repl in" "eval" "e" "paredit" "academic-" "a" "git" "apt" "mode" "org" "theme" "highlight inde" "markd" "elfeed" "flycheck " "s"))
(setq-default regexp-search-ring '("paredit" "\\(eval\\).*?\\(in\\)" "FontSub" "e2wm" "mc" "yas-" "setup" "sani"))
(setq-default coding-system-history '(#("utf" 0 3 (ivy-index 44))))
(setq-default command-history '((ag "fluxgui.png" "/home/chopong/.icons/") (kill-buffer ".bash_profile") (kill-buffer ".bashrc") (insert-current-date-time "") (kill-buffer "*Python*") (kill-buffer "FAGpython.py") (describe-key [C-return] 1 nil) (describe-coding-system (quote utf-8)) (describe-current-coding-system) (kill-buffer "init.el") (package-autoremove) (esup nil) (mu4e nil) (kill-buffer "demo.py") (kill-buffer "*R*") (kill-buffer "*Ibuffer*") (delete-this-file) (all-the-icons-install-fonts nil) (smart-mode-line-enable) (telephone-line-mode (quote toggle)) (package-list-packages nil) (kill-buffer "init-mail.el") (kill-buffer "*unsent mail*") (message-mail) (swiper-at-point #("counsel-org-clock" 0 17 ...)) (paredit-mode (quote toggle)) (turn-off-smartparens-mode) (kill-buffer "paredit.el") (describe-key "\363" 1 nil) (swiper-at-point nil)))
(setq-default counsel-descbinds-history '(#("shell" 0 5 (ivy-index 8))))
(setq-default counsel-describe-symbol-history '(#("mu4e fold" 0 9 (ivy-index 3)) #("mu4e dir" 0 8 (ivy-index 5)) "font-lock-maximum-size" "display-time-mode" "show-paren-style" #("counsel sear" 0 12 (ivy-index 0)) #("emacs version" 0 13 (ivy-index 2)) #("org bullets" 0 11 (ivy-index 0)) #("setq" 0 4 (ivy-index 10)) #("ivy-res" 0 7 (ivy-index 2)) #("smartparens" 0 11 (ivy-index 18)) #("flycheck lisp pack" 0 18 (ivy-index 2)) #("flycheck lisp ini" 0 17 (ivy-index 0)) #("flycheck lisp load" 0 18 (ivy-index 0)) #("default direc" 0 13 (ivy-index 2)) #("flycheck emacs lisp pa" 0 22 (ivy-index 1)) #("display buffer list" 0 19 (ivy-index 0)) #("flycheck check sy" 0 17 (ivy-index 0)) #("flycheck glo" 0 12 (ivy-index 0)) "flycheck-display-error-messages-unless-error-list" "flycheck-display-errors-function" "projectile-known-projects-file" #("projectile file" 0 15 (ivy-index 19)) #("auto save list" 0 14 (ivy-index 0)) #("savehist file" 0 13 (ivy-index 0)) #("recentf save" 0 12 (ivy-index 3)) #("recentf file" 0 12 (ivy-index 3)) "yas-snippet-dirs" #("num" 0 3 (ivy-index 60)) "defconst" #("defcons" 0 7 (ivy-index 2)) "yasnippet-snippets-dir" #("yas dirs" 0 8 (ivy-index 0)) #("yas-snippet-dirs" 0 16 (ivy-index 0)) #("yas dir" 0 7 (ivy-index 5)) #("yas-snipp" 0 9 (ivy-index 1)) "yas-reload-all" "browse-kill-ring-separator" "*is-a-lin*" "whitespace-cleanup-mode-ignore-modes" "projectile-command-map" "*is-a-mac*" #("split-window" 0 12 (ivy-index 2))))
(setq-default counsel-git-grep-cmd-history '("git --no-pager grep --full-name -n --no-color -i -I -e \"%s\""))
(setq-default counsel-git-grep-history '(#("ov" 0 2 (ivy-index 0)) #("dash-at" 0 7 (ivy-index 0)) #("use-package ag" 0 14 (ivy-index 2)) #("guide" 0 5 (ivy-index 0)) #("avy" 0 3 (ivy-index 0))))
(setq-default counsel-unicode-char-history '(#("feed" 0 4 (ivy-index 1))))
(setq-default ivy-history '(#("setq" 0 4 (ivy-index 3)) #("fetch" 0 5 (ivy-index 1)) "origin" #("ansi-colo" 0 9 (ivy-index 9)) "master" #("chi" 0 3 (ivy-index 1)) "Detect language" ".gitignore" "half-width" "left-only" "default" "minimal" "no-fringes" "right-only" #("flyche" 0 6 (ivy-index 4)) "lisp-mode.el: (defun lisp-mode)" "window.elc: (defalias split-window-vertically)"))
(setq-default magit-revision-history '("origin/master"))
(setq-default minibuffer-history '("fluxgui.png" "bm-next" "plugins/sidebar" "sidebar" "font-lock+" "ov" "76" "display-time" "auto-image" "paren-mode" "font-lock" "bahs" "flyspell" "dashboard" "dashb" "ag" "fountain" "feed" "chopong" "Chopong" "defer" "init-org-agenda.el" "70" "t" "savehist" "recentf" "yas--default-user-snippets-dir" "yas-snippet-dirs" "magit-auto-revert-mode" "90" "ico" "init-window.el" "init-windows.el"))
(setq-default occur-collect-regexp-history '("\\1"))
(setq-default rg-files-history '("elisp" #("el" 0 2 (ivy-index 0)) "all"))
(setq-default rg-history '("/usr/bin/rg --color always --colors match:fg:red -n --type-add gn\\:\\*.gn --type-add gn\\:\\*.gni --type-add gyp\\:\\*.gyp --type-add gyp\\:\\*.gypi -i --no-heading --type elisp -e projectile-bookmarks" "/usr/bin/rg --color always --colors match:fg:red -n --type-add gn\\:\\*.gn --type-add gn\\:\\*.gni --type-add gyp\\:\\*.gyp --type-add gyp\\:\\*.gypi -i --no-heading --type elisp -e pcache" "/usr/bin/rg --color always --colors match:fg:red -n --type-add gn\\:\\*.gn --type-add gn\\:\\*.gni --type-add gyp\\:\\*.gyp --type-add gyp\\:\\*.gypi -i --no-heading --type elisp -e auto-save-list" "/usr/bin/rg --color always --colors match:fg:red -n --type-add gn\\:\\*.gn --type-add gn\\:\\*.gni --type-add gyp\\:\\*.gyp --type-add gyp\\:\\*.gypi -i --no-heading --type elisp -e forge-database.sqlite" "/usr/bin/rg --color always --colors match:fg:red -n --type-add gn\\:\\*.gn --type-add gn\\:\\*.gni --type-add gyp\\:\\*.gyp --type-add gyp\\:\\*.gypi -i --no-heading --type elisp -e forge" "/usr/bin/rg --color always --colors match:fg:red -n --type-add gn\\:\\*.gn --type-add gn\\:\\*.gni --type-add gyp\\:\\*.gyp --type-add gyp\\:\\*.gypi -i --no-heading --type all -e forge-database.sqlite" "/usr/bin/rg --color always --colors match:fg:red -n --type-add gn\\:\\*.gn --type-add gn\\:\\*.gni --type-add gyp\\:\\*.gyp --type-add gyp\\:\\*.gypi -i --no-heading --type elisp -e recentf" "/usr/bin/rg --color always --colors match:fg:red -n --type-add gn\\:\\*.gn --type-add gn\\:\\*.gni --type-add gyp\\:\\*.gyp --type-add gyp\\:\\*.gypi -i --no-heading --type elisp -e yas-snippet-dirs" "/usr/bin/rg --color always --colors match:fg:red -n --type-add gn\\:\\*.gn --type-add gn\\:\\*.gni --type-add gyp\\:\\*.gyp --type-add gyp\\:\\*.gypi -i --no-heading --type elisp -e magit" "/usr/bin/rg --color always --colors match:fg:red -n --type-add gn\\:\\*.gn --type-add gn\\:\\*.gni --type-add gyp\\:\\*.gyp --type-add gyp\\:\\*.gypi -i --no-heading --type elisp -e magit-auto-revert-mode" "/usr/bin/rg --color always --colors match:fg:red -n --type-add gn\\:\\*.gn --type-add gn\\:\\*.gni --type-add gyp\\:\\*.gyp --type-add gyp\\:\\*.gypi -i --no-heading --type all -e favicon.ico" "/usr/bin/rg --color always --colors match:fg:red -n --type-add gn\\:\\*.gn --type-add gn\\:\\*.gni --type-add gyp\\:\\*.gyp --type-add gyp\\:\\*.gypi -i --no-heading --type elisp -e transient"))
(setq-default rg-pattern-history '("projectile-bookmarks" "pcache" "auto-save-list" "forge-database.sqlite" "forge" "recentf" "yas-snippet-dirs" "magit" "magit-auto-revert-mode" "subword" "favicon.ico" "transient"))
(setq-default serial-name-history '("/dev/ttyS0"))
(setq-default serial-speed-history '("9600" "1200" "2400" "4800" "14400" "19200" "28800" "38400" "57600" "115200"))
(setq-default shell-command-history '("locale" "fetchmail" "ls" "sudo apt install gcc" "sudo apt install silversearcher-ag"))
(setq-default slime-connect-host-history '("localhost"))
(setq-default slime-connect-port-history '("4005"))
(setq-default smex-history '(ag describe-coding-system describe-current-coding-system package-autoremove thumbs esup mu4e))
(setq-default swiper-history '(#("paredit" 0 7 (ivy-index 11)) #("eval in" 0 7 (ivy-index 22)) #("FontSub" 0 7 (ivy-index 0)) #("e2wm" 0 4 (ivy-index 1)) #("mc" 0 2 (ivy-index 0)) "recentf" "yas--default-user-snippets-dir" #("yas-" 0 4 (ivy-index 0)) "browse-kill-ring-quit" #("setup" 0 5 (ivy-index 0)) "san" #("sani" 0 4 (ivy-index 0))))
(setq-default table-capture-columns-history '(""))
(setq-default table-capture-justify-history '("left"))
(setq-default table-capture-min-cell-width-history '("5"))
(setq-default table-cell-height-history '("1"))
(setq-default table-cell-span-direction-history '("right"))
(setq-default table-cell-split-contents-to-history '("split"))
(setq-default table-cell-split-orientation-history '("horizontally"))
(setq-default table-cell-width-history '("5"))
(setq-default table-col-delim-regexp-history '(""))
(setq-default table-columns-history '("3"))
(setq-default table-insert-row-column-history '("row"))
(setq-default table-justify-history '("center"))
(setq-default table-row-delim-regexp-history '(""))
(setq-default table-rows-history '("3"))
(setq-default table-sequence-count-history '("0"))
(setq-default table-sequence-increment-history '("1"))
(setq-default table-sequence-interval-history '("1"))
(setq-default table-sequence-justify-history '("left"))
(setq-default table-sequence-string-history '("0"))
(setq-default table-source-caption-history '("Table"))
(setq-default table-source-language-history '("html"))
(setq-default table-target-history '("cell"))
(setq-default transient-history '((magit-commit nil) (magit-diff ("--no-ext-diff" "--stat")) (magit-dispatch nil) (magit-merge nil) (magit-push nil)))
(setq-default yes-or-no-p-history '("yes"))
