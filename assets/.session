;;; -*- coding: utf-8; -*-
;;; Automatically generated on Thu Jun 20 12:07:13 2019
;;; Invoked by chopong@di using 26.2
(setq-default kill-ring '(#("(use-)" 0 1 (fontified t face \.\.\.) 1 5 (fontified t) 5 6 (fontified t face \.\.\.)) #("package time :ensure nil :defer t
  :" 0 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 12 (fontified t face font-lock-constant-face) 12 13 (fontified t) 13 14 (fontified t) 14 20 (face font-lock-builtin-face fontified t) 20 21 (fontified t) 21 25 (fontified t) 25 26 (fontified t) 26 31 (face font-lock-builtin-face fontified t) 31 32 (fontified t) 32 34 (fontified t) 34 37 (fontified t)) "(setq display-line-numbers-type)
"))
(setq-default session-file-alist '(("~/.emacs.d/init.el" 1081 391 1 nil nil 637 (overwrite-mode)) ("~/.emacs.d/config/init-calendar.el" 290 nil 1 nil nil 304 (overwrite-mode)) ("~/.emacs.d/config/init-frame-gui.el" 3781 1124 1 nil nil 3778 (overwrite-mode)) ("~/.emacs.d/config/init-frame-term.el" 1358 1786 1 nil nil 1785 (overwrite-mode)) ("~/.emacs.d/config/init-editing-tools.el" 2790 2790 1 nil nil 2673 (overwrite-mode)) ("~/.emacs.d/config/init-locale.el" 1151 nil 1 nil nil 1151 (overwrite-mode)) ("~/Documents/File/Bash/emacs.sh" 404 130 1 nil nil 404 (overwrite-mode)) ("~/Documents/File/Bash/android.sh" 167 nil 1 nil nil 168 (overwrite-mode)) ("~/Documents/File/Bash/conky.sh" 136 nil 1 nil nil 135 (overwrite-mode)) ("~/Documents/File/Note/mailconfig.md" 221 864 1 nil nil 2074 (overwrite-mode)) ("~/.msmtprc" 201 1 1 nil nil 201 (overwrite-mode)) ("~/.fetchmailrc" 400 674 1 nil nil 257 (overwrite-mode)) ("~/.procmailrc" 293 1 1 nil nil 293 (overwrite-mode)) ("~/.muttrc" 506 29 1 nil nil 30 (overwrite-mode)) ("~/Documents/Blog/_posts/2019-05-02-美化shell.md" 1682 nil 1 nil nil 1682 (overwrite-mode)) ("~/Documents/File/Bash/jekyll.sh" 509 300 1 nil nil 509 (overwrite-mode)) ("~/Documents/Blog/_posts/2019-05-02-创建Jekyll个人博客.md" 1152 nil 1 nil nil 970 (overwrite-mode)) ("~/.emacs.d/config/init-yasnippet.el" 1150 1009 1 nil nil 1134 (overwrite-mode)) ("~/.emacs.d/config/init-spell.el" 211 nil 1 nil nil 211 (overwrite-mode)) ("~/.emacs.d/config/init-emacs-lisp.el" 1028 494 1 nil nil 983 (overwrite-mode)) ("~/Documents/File/Bash/fcitx.sh" 174 1 1 nil nil 175 (overwrite-mode)) ("~/Documents/File/mail.sh" 48 48 1 nil nil 48 (overwrite-mode)) ("~/.emacs" 120 1 1 nil nil 54 (overwrite-mode)) ("~/Documents/File/demo.org" 262 262 1 nil nil 262 (overwrite-mode)) ("/Volumes/SHARE/系统信息/Codec10.txt.svg" 41 nil 1 nil nil 41 (overwrite-mode)) ("/media/chopong/SHARE/系统信息/tables/verbit.sh" 1 8222 1 nil nil 7142 (overwrite-mode)) ("/media/chopong/SHARE/DotEmacs/assets/templete/templete.sh" 12 nil 1 nil nil 13 (overwrite-mode)) ("/Volumes/SHARE/DotEmacs/assets/custom.el" 1 nil 1 nil nil 3160 (overwrite-mode)) ("~/Desktop/未命名文件夹/Hackintosh-Deepin-Windows/README.md" 484 990 1 nil nil 403 (overwrite-mode)) ("~/Desktop/未命名文件夹/Hackintosh-Deepin-Windows/.gitignore" 1 nil 1 nil nil 1 (overwrite-mode)) ("/Volumes/SHARE/DotEmacs/init.el" 195 463 1 nil nil 513 (overwrite-mode)) ("~/.emacs.d/config/init-cnfonts.el" 312 279 1 nil nil 263 (overwrite-mode)) ("~/.emacs.d/config/init-window.el" 4301 3979 1 nil nil 4301 (overwrite-mode)) ("~/.emacs.d/elpa/pangu-spacing-20190422.514/pangu-spacing-autoloads.el" 1606 nil 1 nil nil 1606 (overwrite-mode)) ("~/.emacs.d/assets/custom.el" 1 nil 1 nil nil 3155 (overwrite-mode)) ("~/.emacs.d/config/init-writeroom.el" 1709 1677 1 nil nil 1662 (overwrite-mode)) ("~/.emacs.d/config/init-pos-package.el" 3601 3022 1 nil nil 3599 (overwrite-mode)) ("~/.emacs.d/config/init-mode-line.el" 1132 495 1 nil nil 1087 (overwrite-mode)) ("~/.emacs.d/config/init-org.el" 1279 1189 1 nil nil 1176 (overwrite-mode)) ("~/.emacs.d/elpa/indent-guide-20170221.1127/indent-guide-autoloads.el" 1469 nil 1 nil nil 1469 (overwrite-mode)) ("~/.emacs.d/elpa/telephone-line-20190424.1934/telephone-line-autoloads.el" 3028 nil 1 nil nil 3028 (overwrite-mode)) ("~/.emacs.d/elpa/parinfer-20180904.844/parinfer-autoloads.el" 1125 nil 1 nil nil 1125 (overwrite-mode)) ("~/.emacs.d/elpa/org-noter-20190502.1425/org-noter-autoloads.el" 2058 nil 1 nil nil 2058 (overwrite-mode)) ("~/.emacs.d/elpa/suggest-20180916.1859/suggest-autoloads.el" 954 nil 1 nil nil 954 (overwrite-mode)) ("~/.emacs.d/elpa/olivetti-20190519.1316/olivetti-autoloads.el" 632 nil 1 nil nil 632 (overwrite-mode)) ("~/Documents/File/Org/scheme.org" 165 nil 1 nil nil 1 (overwrite-mode)) ("~/.emacs.d/config/init-theme.el" 326 341 1 nil nil 174 (overwrite-mode)) ("~/.emacs.d/elpa/org-bullets-20180208.2343/org-bullets-autoloads.el" 542 nil 1 nil nil 542 (overwrite-mode)) ("~/.emacs.d/elpa/writegood-mode-20180525.1343/writegood-mode-autoloads.el" 988 nil 1 nil nil 988 (overwrite-mode)) ("~/.emacs.d/config/init-org-agenda.el" 2757 14 1 nil nil 2908 (overwrite-mode)) ("~/.emacs.d/config/init-osx-keys.el" 1256 1256 1 nil nil 1202 (overwrite-mode)) ("~/.emacs.d/config/init-mmm.el" 403 nil 1 nil nil nil (overwrite-mode)) ("~/.emacs.d/config/init-org-mindmap.el" 571 256 1 nil nil 205 (overwrite-mode)) ("~/.emacs.d/elpa/org-mind-map-20180826.2340/org-mind-map-autoloads.el" 4255 nil 1 nil nil 4255 (overwrite-mode)) ("~/.emacs.d/elpa/perspective-20181120.114/perspective-autoloads.el" 1023 nil 1 nil nil 1023 (overwrite-mode)) ("~/.emacs.d/elpa/poly-markdown-20190415.1547/poly-markdown-autoloads.el" 555 nil 1 nil nil 555 (overwrite-mode)) ("~/.emacs.d/elpa/window-purpose-20190405.1101/window-purpose-autoloads.el" 13649 nil 1 nil nil 13649 (overwrite-mode)) ("~/.emacs.d/elpa/imenu-list-20190115.2130/imenu-list-autoloads.el" 1832 nil 1 nil nil 1832 (overwrite-mode)) ("~/.emacs.d/elpa/cnfonts-20190314.1132/cnfonts-autoloads.el" 2206 nil 1 nil nil 2206 (overwrite-mode)) ("~/.emacs.d/elpa/highlight-indent-guides-20190108.3/highlight-indent-guides-autoloads.el" 1011 nil 1 nil nil 1011 (overwrite-mode)) ("~/.emacs.d/elpa/crux-20181108.827/crux-autoloads.el" 7375 nil 1 nil nil 7375 (overwrite-mode)) ("~/.emacs.d/elpa/nov-20190115.1854/nov-autoloads.el" 463 nil 1 nil nil 463 (overwrite-mode)) ("~/.emacs.d/elpa/esxml-20171129.807/esxml-autoloads.el" 753 nil 1 nil nil 753 (overwrite-mode)) ("~/.emacs.d/elpa/golden-ratio-20150819.1120/golden-ratio-autoloads.el" 1056 nil 1 nil nil 1056 (overwrite-mode)) ("~/.emacs.d/config/init-agenda.el" 222 2864 1 nil nil 2841 (overwrite-mode)) ("~/.emacs.d/elpa/org-super-agenda-20190315.621/org-super-agenda-autoloads.el" 1169 nil 1 nil nil 1169 (overwrite-mode)) ("~/.emacs.d/config/init-sidebar.el" 300 173 1 nil nil 314 (overwrite-mode)) ("~/.emacs.d/config/init-org-download.el" 286 nil 1 nil nil 260 (overwrite-mode)) ("~/.emacs.d/elpa/org-download-20190404.1305/org-download-autoloads.el" 522 nil 1 nil nil 522 (overwrite-mode)) ("~/.emacs.d/elpa/dashboard-20190320.725/dashboard-autoloads.el" 951 nil 1 nil nil 951 (overwrite-mode)) ("~/.emacs.d/assets/snippets/emacs-lisp-mode/use-package" 54 117 1 nil nil 116 (overwrite-mode)) ("~/.emacs.d/config/init-markdown.el" 514 174 1 nil nil 487 (overwrite-mode)) ("~/.emacs.d/elpa/sublimity-20181121.1311/sublimity-autoloads.el" 1728 nil 1 nil nil 1728 (overwrite-mode)) ("~/.emacs.d/elpa/helpful-20190516.1954/helpful-autoloads.el" 1369 nil 1 nil nil 1369 (overwrite-mode)) ("~/.emacs.d/elpa/dash-functional-20180107.1618/dash-functional-autoloads.el" 506 nil 1 nil nil 506 (overwrite-mode)) ("~/.emacs.d/elpa/elisp-refs-20190323.1331/elisp-refs-autoloads.el" 1742 nil 1 nil nil 1742 (overwrite-mode)) ("~/.emacs.d/elpa/loop-20160813.1407/loop-autoloads.el" 386 nil 1 nil nil 386 (overwrite-mode)) ("~/.emacs.d/elpa/shut-up-20180628.1830/shut-up-autoloads.el" 1309 nil 1 nil nil 1309 (overwrite-mode)) ("~/.emacs.d/elpa/org-caldav-20180403.2036/org-caldav-autoloads.el" 769 nil 1 nil nil 769 (overwrite-mode)) ("~/.emacs.d/config/init-xtags.el" 244 244 1 nil nil 192 (overwrite-mode)) ("~/.emacs.d/config/init-search.el" 1430 1462 1 nil nil nil (overwrite-mode))))
(setq-default search-ring '("apt" "mode" "org" "theme" "highlight inde" "markd" "elfeed" "flycheck " "s" "sa"))
(setq-default regexp-search-ring '("mc" "yas-" "setup" "paredit" "sani"))
(setq-default coding-system-history '(#("utf" 0 3 (ivy-index 7))))
(setq-default counsel-descbinds-history '(#("shell" 0 5 (ivy-index 8))))
(setq-default counsel-describe-symbol-history '("display-time-mode" "show-paren-style" #("counsel sear" 0 12 (ivy-index 0)) #("emacs version" 0 13 (ivy-index 2)) #("org bullets" 0 11 (ivy-index 0)) #("setq" 0 4 (ivy-index 10)) #("ivy-res" 0 7 (ivy-index 2)) #("smartparens" 0 11 (ivy-index 18)) #("flycheck lisp pack" 0 18 (ivy-index 2)) #("flycheck lisp ini" 0 17 (ivy-index 0)) #("flycheck lisp load" 0 18 (ivy-index 0)) #("default direc" 0 13 (ivy-index 2)) #("flycheck emacs lisp pa" 0 22 (ivy-index 1)) #("display buffer list" 0 19 (ivy-index 0)) #("flycheck check sy" 0 17 (ivy-index 0)) #("flycheck glo" 0 12 (ivy-index 0)) "flycheck-display-error-messages-unless-error-list" "flycheck-display-errors-function" "projectile-known-projects-file" #("projectile file" 0 15 (ivy-index 19)) #("auto save list" 0 14 (ivy-index 0)) #("savehist file" 0 13 (ivy-index 0)) #("recentf save" 0 12 (ivy-index 3)) #("recentf file" 0 12 (ivy-index 3)) "yas-snippet-dirs" #("num" 0 3 (ivy-index 60)) "defconst" #("defcons" 0 7 (ivy-index 2)) "yasnippet-snippets-dir" #("yas dirs" 0 8 (ivy-index 0)) #("yas-snippet-dirs" 0 16 (ivy-index 0)) #("yas dir" 0 7 (ivy-index 5)) #("yas-snipp" 0 9 (ivy-index 1)) "yas-reload-all" "browse-kill-ring-separator" "*is-a-lin*" "whitespace-cleanup-mode-ignore-modes" "projectile-command-map" "*is-a-mac*" #("split-window" 0 12 (ivy-index 2))))
(setq-default counsel-git-grep-cmd-history '("git --no-pager grep --full-name -n --no-color -i -I -e \"%s\""))
(setq-default counsel-git-grep-history '(#("pari" 0 4 (ivy-index 0)) #("dash-at" 0 7 (ivy-index 0)) #("use-package ag" 0 14 (ivy-index 2)) #("guide" 0 5 (ivy-index 0)) #("avy" 0 3 (ivy-index 0))))
(setq-default counsel-unicode-char-history '(#("feed" 0 4 (ivy-index 1))))
(setq-default ivy-history '(#("ansi-colo" 0 9 (ivy-index 9)) "master" "origin" #("chi" 0 3 (ivy-index 1)) "Detect language" ".gitignore" "half-width" "left-only" "default" "minimal" "no-fringes" "right-only" #("flyche" 0 6 (ivy-index 4)) "lisp-mode.el: (defun lisp-mode)" "window.elc: (defalias split-window-vertically)"))
(setq-default magit-revision-history '("origin/master"))
(setq-default minibuffer-history '("display-time" "auto-image" "paren-mode" "font-lock" "bahs" "flyspell" "dashboard" "dashb" "ag" "fountain" "feed" "chopong" "Chopong" "defer" "init-org-agenda.el" "70" "t" "savehist" "recentf" "yas--default-user-snippets-dir" "yas-snippet-dirs" "magit-auto-revert-mode" "90" "ico" "init-window.el" "init-windows.el"))
(setq-default occur-collect-regexp-history '("\\1"))
(setq-default rg-files-history '("elisp" #("el" 0 2 (ivy-index 0)) "all"))
(setq-default rg-history '("/usr/bin/rg --color always --colors match:fg:red -n --type-add gn\\:\\*.gn --type-add gn\\:\\*.gni --type-add gyp\\:\\*.gyp --type-add gyp\\:\\*.gypi -i --no-heading --type elisp -e projectile-bookmarks" "/usr/bin/rg --color always --colors match:fg:red -n --type-add gn\\:\\*.gn --type-add gn\\:\\*.gni --type-add gyp\\:\\*.gyp --type-add gyp\\:\\*.gypi -i --no-heading --type elisp -e pcache" "/usr/bin/rg --color always --colors match:fg:red -n --type-add gn\\:\\*.gn --type-add gn\\:\\*.gni --type-add gyp\\:\\*.gyp --type-add gyp\\:\\*.gypi -i --no-heading --type elisp -e auto-save-list" "/usr/bin/rg --color always --colors match:fg:red -n --type-add gn\\:\\*.gn --type-add gn\\:\\*.gni --type-add gyp\\:\\*.gyp --type-add gyp\\:\\*.gypi -i --no-heading --type elisp -e forge-database.sqlite" "/usr/bin/rg --color always --colors match:fg:red -n --type-add gn\\:\\*.gn --type-add gn\\:\\*.gni --type-add gyp\\:\\*.gyp --type-add gyp\\:\\*.gypi -i --no-heading --type elisp -e forge" "/usr/bin/rg --color always --colors match:fg:red -n --type-add gn\\:\\*.gn --type-add gn\\:\\*.gni --type-add gyp\\:\\*.gyp --type-add gyp\\:\\*.gypi -i --no-heading --type all -e forge-database.sqlite" "/usr/bin/rg --color always --colors match:fg:red -n --type-add gn\\:\\*.gn --type-add gn\\:\\*.gni --type-add gyp\\:\\*.gyp --type-add gyp\\:\\*.gypi -i --no-heading --type elisp -e recentf" "/usr/bin/rg --color always --colors match:fg:red -n --type-add gn\\:\\*.gn --type-add gn\\:\\*.gni --type-add gyp\\:\\*.gyp --type-add gyp\\:\\*.gypi -i --no-heading --type elisp -e yas-snippet-dirs" "/usr/bin/rg --color always --colors match:fg:red -n --type-add gn\\:\\*.gn --type-add gn\\:\\*.gni --type-add gyp\\:\\*.gyp --type-add gyp\\:\\*.gypi -i --no-heading --type elisp -e magit" "/usr/bin/rg --color always --colors match:fg:red -n --type-add gn\\:\\*.gn --type-add gn\\:\\*.gni --type-add gyp\\:\\*.gyp --type-add gyp\\:\\*.gypi -i --no-heading --type elisp -e magit-auto-revert-mode" "/usr/bin/rg --color always --colors match:fg:red -n --type-add gn\\:\\*.gn --type-add gn\\:\\*.gni --type-add gyp\\:\\*.gyp --type-add gyp\\:\\*.gypi -i --no-heading --type all -e favicon.ico" "/usr/bin/rg --color always --colors match:fg:red -n --type-add gn\\:\\*.gn --type-add gn\\:\\*.gni --type-add gyp\\:\\*.gyp --type-add gyp\\:\\*.gypi -i --no-heading --type elisp -e transient"))
(setq-default rg-pattern-history '("projectile-bookmarks" "pcache" "auto-save-list" "forge-database.sqlite" "forge" "recentf" "yas-snippet-dirs" "magit" "magit-auto-revert-mode" "subword" "favicon.ico" "transient"))
(setq-default serial-name-history '("/dev/ttyS0"))
(setq-default serial-speed-history '("9600" "1200" "2400" "4800" "14400" "19200" "28800" "38400" "57600" "115200"))
(setq-default shell-command-history '("sudo apt install gcc" "sudo apt install silversearcher-ag"))
(setq-default slime-connect-host-history '("localhost"))
(setq-default slime-connect-port-history '("4005"))
(setq-default smex-history '(ag global-linum-mode global-hl-line-mode line-number-mode column-number-mode package-list-packages list-packages))
(setq-default swiper-history '(#("mc" 0 2 (ivy-index 0)) "recentf" "yas--default-user-snippets-dir" #("yas-" 0 4 (ivy-index 0)) "browse-kill-ring-quit" #("setup" 0 5 (ivy-index 0)) "san" #("paredit" 0 7 (ivy-index 0)) #("sani" 0 4 (ivy-index 0))))
(setq-default table-capture-columns-history '(""))
(setq-default table-capture-justify-history '("left"))
(setq-default table-capture-min-cell-width-history '("5"))
(setq-default table-cell-height-history '("1"))
(setq-default table-cell-span-direction-history '("right"))
(setq-default table-cell-split-contents-to-history '("split"))
(setq-default table-cell-split-orientation-history '("horizontally"))
(setq-default table-cell-width-history '("5"))
(setq-default table-col-delim-regexp-history '(""))
(setq-default table-columns-history '("3"))
(setq-default table-insert-row-column-history '("row"))
(setq-default table-justify-history '("center"))
(setq-default table-row-delim-regexp-history '(""))
(setq-default table-rows-history '("3"))
(setq-default table-sequence-count-history '("0"))
(setq-default table-sequence-increment-history '("1"))
(setq-default table-sequence-interval-history '("1"))
(setq-default table-sequence-justify-history '("left"))
(setq-default table-sequence-string-history '("0"))
(setq-default table-source-caption-history '("Table"))
(setq-default table-source-language-history '("html"))
(setq-default table-target-history '("cell"))
(setq-default transient-history '((magit-commit nil) (magit-diff ("--no-ext-diff" "--stat")) (magit-dispatch nil) (magit-merge nil) (magit-push nil)))
